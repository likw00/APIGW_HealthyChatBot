AWSTemplateFormatVersion: 2010-09-09
Conditions:
  EnableDecodeQrcode:
    Fn::Equals:
    - Ref: DecodeQrcode
    - true
  EnableDynamodbAutoscaling:
    Fn::Equals:
    - Ref: DynamodbAutoscaling
    - true
Description: Lex Interceptor
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS
      Parameters:
      - SourceBucket
      - BotName
      - BotAlias
      - DynamodbAutoscaling
      - DecodeQrcoede
    - Label:
        default: Google
      Parameters:
      - GoogleApiKey
      - AllowedLanguages
      - SpeechRecognizeLanguage
    - Label:
        default: ResponsiveVoice.JS
      Parameters:
      - SynthesizeSpeechLanguageHints
    - Label:
        default: Facebook
      Parameters:
      - FacebookPageToken
      - FacebookVerifyToken
    ParameterLabels:
      AllowedLanguages:
        default: Google Translation Allowed Languages Code List
      BotAlias:
        default: Lex Bot Alias
      BotName:
        default: Lex Bot Name
      DecodeQrcoede:
        default: Decode Qrcoede
      DynamodbAutoscaling:
        default: Dynamodb Autoscaling
      FacebookPageToken:
        default: Facebook Page Token
      FacebookVerifyToken:
        default: Facebook Verify Token
      GoogleApiKey:
        default: Google Api Key
      SourceBucket:
        default: Source Bucket
      SpeechRecognizeLanguage:
        default: Google SpeechRecognize Language Code
      SynthesizeSpeechLanguageHints:
        default: Synthesize Speech Language Hints
Parameters:
  AllowedLanguages:
    Default: zh-TW,zh-HK,en
    Description: Google Translation API allowed values. If it detects something out
      of the list, it will use the first one for reply translation. If it detects
      the input language in the list, it translates the reply with the detected language.
    Type: CommaDelimitedList
  BotAlias:
    Default: $LATEST
    Description: AWS Lex Bot Alias
    Type: String
  BotName:
    Default: InfoDay_InfoDayBot
    Description: AWS Lex Bot Name
    Type: String
  DecodeQrcode:
    AllowedValues:
    - true
    - false
    Default: true
    Description: Enable Decode Qrcoede from image attachment.
    Type: String
  DynamodbAutoscaling:
    AllowedValues:
    - true
    - false
    Default: true
    Description: Enable DynamoDB AutoScaling
    Type: String
  FacebookPageToken:
    Description: Facebook Page Token
    NoEcho: true
    Type: String
  FacebookVerifyToken:
    Description: Facebook Verify Token
    NoEcho: true
    Type: String
  GoogleApiKey:
    Description: Google API Key that enabled Translation API and Speech API. (https://codelabs.developers.google.com/codelabs/cloud-speech-intro/index.html?index=..%2F..%2Findex#3)
    NoEcho: true
    Type: String
  SourceBucket:
    Default: howwhofeelinvideopackage
    Description: Bucket Lambda deployment packages (LexInterceptor_latest.zip and
      QrcodeDecoderLambda-1.0-SNAPSHOT-all.jar)
    Type: String
  SpeechRecognizeLanguage:
    Default: yue-Hant-HK
    Description: Only one Language is supported for Voice to Text. ( https://cloud.google.com/speech/docs/languages
      )
    Type: String
  SynthesizeSpeechLanguageHints:
    Default: '{"zh":"zh-HK"}'
    Description: Json Object. For Polly unsupported language, synthesize speech hints
      help mapping the region language. i.e. zh can map to zh-TW (Mandarin) or zh-HK
      (Cantonese).
    Type: String
Resources:
  AttachmentBucket:
    Properties:
      AccessControl: Private
    Type: AWS::S3::Bucket
  DecodeQrcodeFunction:
    Condition: EnableDecodeQrcode
    Properties:
      CodeUri:
        Bucket:
          Ref: SourceBucket
        Key: QrcodeDecoderLambda-1.0-SNAPSHOT-all.jar
      Description: Decode Qrcode by sending in Url string.
      Handler: com.cloudlab.healthAi.qrcode.QrcodeHandler::handleRequest
      MemorySize: 1024
      Policies:
      - AWSXrayWriteOnlyAccess
      - AmazonRekognitionFullAccess
      - AWSLambdaExecute
      - AWSLambdaBasicExecutionRole
      Runtime: java8
      Timeout: 60
      Tracing: Active
    Type: AWS::Serverless::Function
  DynamoDBAutoscalingRole:
    Condition: EnableDynamodbAutoscaling
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - application-autoscaling.amazonaws.com
        Version: 2012-10-17
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:DescribeTable
            - dynamodb:UpdateTable
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Action:
            - cloudwatch:DescribeAlarms
            - cloudwatch:PutMetricAlarm
            - cloudwatch:DeleteAlarms
            Effect: Allow
            Resource: '*'
          Version: 2012-10-17
        PolicyName: lambdaIAMRolePolicy
    Type: AWS::IAM::Role
  FacebookLexInterceptorFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: SourceBucket
        Key: LexInterceptor_latest.zip
      Description: Interceptor Facebook Request
      Environment:
        Variables:
          ALLOWED_LANGUAGES:
            Fn::Join:
            - ':'
            - Ref: AllowedLanguages
          ATTACHMENT_BUCKET:
            Ref: AttachmentBucket
          BOT_ALIAS:
            Ref: BotAlias
          BOT_NAME:
            Ref: BotName
          GOOGLE_API_KEY:
            Ref: GoogleApiKey
          IMAGE_TABLE:
            Ref: ImageTable
          PAGE_TOKEN:
            Ref: FacebookPageToken
          QRCODE_FUNCTION:
            Fn::If:
            - EnableDecodeQrcode
            - Ref: DecodeQrcodeFunction
            - Ref: AWS::NoValue
          SESSION_TABLE_NAME:
            Ref: SessionTable
          SPEECH_RECOGNIZE_LANGUAGE:
            Ref: SpeechRecognizeLanguage
          SYNTHESIZE_SPEECH_LANGUAGE_HINTS:
            Ref: SynthesizeSpeechLanguageHints
          VERIFY_TOKEN:
            Ref: FacebookVerifyToken
          VOICE_BUCKET:
            Ref: VoiceBucket
          VOICE_SITE_URL:
            Fn::GetAtt:
            - VoiceBucket
            - WebsiteURL
      Events:
        GetMessage:
          Properties:
            Method: get
            Path: /
          Type: Api
        PostMessage:
          Properties:
            Method: post
            Path: /
          Type: Api
      Handler: facebookInterceptor.handler
      MemorySize: 512
      Policies:
      - AWSLambdaExecute
      - AWSXrayWriteOnlyAccess
      - AmazonRekognitionFullAccess
      - AmazonDynamoDBFullAccess
      - Statement:
        - Action:
          - lambda:InvokeFunction
          - lex:PostText
          - polly:DescribeVoices
          - polly:SynthesizeSpeech
          Effect: Allow
          Resource: '*'
        - Action:
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${SessionTable}
        Version: '2012-10-17'
      Runtime: nodejs6.10
      Timeout: 60
      Tracing: Active
    Type: AWS::Serverless::Function
  ImageDynamoDBTableReadScalingPolicy:
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: ImageDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  ImageDynamoDBTableReadScalingTarget:
    Condition: EnableDynamodbAutoscaling
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${ImageTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  ImageDynamoDBTableWriteScalingPolicy:
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: ImageDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  ImageDynamoDBTableWriteScalingTarget:
    Condition: EnableDynamodbAutoscaling
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${ImageTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  ImageTable:
    Type: AWS::Serverless::SimpleTable
  SessionDynamoDBTableReadScalingPolicy:
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: SessionDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  SessionDynamoDBTableReadScalingTarget:
    Condition: EnableDynamodbAutoscaling
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${SessionTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  SessionDynamoDBTableWriteScalingPolicy:
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: SessionDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
  SessionDynamoDBTableWriteScalingTarget:
    Condition: EnableDynamodbAutoscaling
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId:
        Fn::Sub: table/${SessionTable}
      RoleARN:
        Fn::GetAtt:
        - DynamoDBAutoscalingRole
        - Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
    Type: AWS::ApplicationAutoScaling::ScalableTarget
  SessionTable:
    Type: AWS::Serverless::SimpleTable
  VoiceBucket:
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
    Type: AWS::S3::Bucket
  VoiceBucketPolicy:
    Properties:
      Bucket:
        Ref: VoiceBucket
      PolicyDocument:
        Id: VoiceBucketPolicy
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Principal: '*'
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: VoiceBucket
              - /*
          Sid: PublicReadForGetBucketObjects
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
Transform: AWS::Serverless-2016-10-31
